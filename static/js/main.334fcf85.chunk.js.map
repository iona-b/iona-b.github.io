{"version":3,"sources":["media/watercolour-texture-background.png","components/About.js","components/Home.js","components/Projects.js","components/Resume.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","Home","Project","Resume","NotFound","to","className","App","src","require","alt","id","exact","href","path","component","Projects","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4LAAAA,EAAOC,QAAU,IAA0B,4D,wGCa5BC,MAXf,WAEE,OAEE,+BCOWC,MAXf,WAEE,OAEE,+BCOWC,MAXf,WAEE,OAEE,+BCOWC,MAXf,WAEE,OAEE,+BCYWC,MAff,WAEE,OAEE,6BACE,0DACA,kBAAC,IAAD,CAAMC,GAAG,KACP,4BAAQC,UAAU,WAAlB,WCgCOC,MAjCf,WACE,OACE,yBAAKD,UAAU,YACb,yBAAKE,IAAKC,EAAQ,IAA+CC,IAAI,GAAGC,GAAG,eAC3E,yBAAKA,GAAG,UACN,kBAAC,IAAD,CAASN,GAAG,SAASO,OAAK,EAACN,UAAU,gBAArC,SACA,kBAAC,IAAD,CAASD,GAAG,YAAYO,OAAK,EAACN,UAAU,gBAAxC,YACA,kBAAC,IAAD,CAASD,GAAG,UAAUO,OAAK,EAACN,UAAU,gBAAtC,WAGF,yBAAKK,GAAG,0BACN,wBAAIL,UAAU,MAAd,kBACA,wBAAIA,UAAU,MAAd,0EACA,6BACA,uBAAGO,KAAK,4BAA4BP,UAAU,gBAA9C,UAAwE,6BACxE,uBAAGO,KAAK,6CAA6CP,UAAU,gBAA/D,YAA2F,6BAC3F,uBAAGO,KAAK,uBAAuBP,UAAU,gBAAzC,QACA,wBAAIK,GAAG,sBAAP,uBAGF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACE,KAAK,IAAIC,UAAWd,IACjC,kBAAC,IAAD,CAAOW,OAAK,EAACE,KAAK,SAASC,UAAWf,IACtC,kBAAC,IAAD,CAAOY,OAAK,EAACE,KAAK,YAAYC,UAAWC,IACzC,kBAAC,IAAD,CAAOJ,OAAK,EAACE,KAAK,UAAUC,UAAWZ,IACvC,kBAAC,IAAD,CAAOY,UAAWX,OCtBNa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.334fcf85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/watercolour-texture-background.075b307c.png\";","import React from 'react';\n\nfunction About() {\n\n  return (\n\n    <div >\n    </div>\n    \n  );\n  \n}\n\nexport default About;","import React from 'react';\n\nfunction Home() {\n\n  return (\n\n    <div >\n    </div>\n    \n  );\n  \n}\n\nexport default Home;","import React from 'react';\n\nfunction Project() {\n\n  return (\n\n    <div >\n    </div>\n    \n  );\n  \n}\n\nexport default Project;","import React from 'react';\n\nfunction Resume() {\n\n  return (\n\n    <div >\n    </div>\n    \n  );\n  \n}\n\nexport default Resume;","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nfunction NotFound() {\n\n  return (\n\n    <div >\n      <h2> This page does not exist </h2>\n      <Link to='/' >\n        <button className=\"buttons\">Home</button>\n      </Link>\n    </div>\n    \n  );\n  \n}\n\nexport default NotFound;","import React from 'react';\nimport {Route, Switch, NavLink, Link} from 'react-router-dom'\nimport './App.css';\nimport About from './components/About'\nimport Home from './components/Home'\nimport Projects from './components/Projects'\nimport Resume from './components/Resume'\nimport NotFound from './components/NotFound'\n\nfunction App() {\n  return (\n    <div className=\"homepage\">\n      <img src={require(\"./media/watercolour-texture-background.png\")} alt='' id=\"background\" />\n      <div id=\"navbar\">\n        <NavLink to='/about' exact className=\"navbar-links\" >About</NavLink>\n        <NavLink to='/projects' exact className=\"navbar-links\" >Projects</NavLink>\n        <NavLink to='/resume' exact className=\"navbar-links\" >Resume</NavLink>\n      </div >\n\n      <div id=\"under-construction-div\" >\n        <h1 className=\"h1\" >Iona Brabender</h1>\n        <h2 className=\"h2\" >Full-Stack Software Engineer | Ruby on Rails, JavaScript, React, Redux</h2>\n        <br></br>\n        <a href=\"https://github.com/iona-b\" className=\"navbar-links\" >GitHub</a><br></br>\n        <a href=\"https://www.linkedin.com/in/iona-brabender\" className=\"navbar-links\" >LinkedIn</a><br></br>\n        <a href=\"https://dev.to/ionab\" className=\"navbar-links\" >Blog</a>\n        <h1 id=\"under-construction\" >Under Construction</h1>\n      </div>     \n\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route exact path='/about' component={About} />\n        <Route exact path='/projects' component={Projects} />\n        <Route exact path='/resume' component={Resume} />\n        <Route component={NotFound}/>\n      </Switch>\n    </div>\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}